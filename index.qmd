---
title: "Predicting Diabetes Using Logistic Regression in R"
author: Faithwin Gbadamosi
subtitle: Final Project for Geo 511
date: today
date-format: long
---

# Introduction

The disease “Diabetes Mellitus” is one of the most common critical diseases in the world. According to the World Health Organization (WHO), approximately 422 million people worldwide currently live with diabetes, with the majority residing in low- and middle-income countries (World Health Organization, 2023). The disease is characterized by elevated levels of blood glucose (or blood sugar), which leads over time to serious damage to the heart, blood vessels, eyes, kidneys and nerves.

For people at risk of diabetes, healthcare professionals have stressed the value of routine tests, emphasizing the necessity of early detection and intervention (Pranto eta al., 2020). In addition to diabetes care, prevention is essential. Prediction of diabetes from the onset can help healthcare providers take early preventive measures (Talukder et al., 2024).

This project aims to build a predictive model for diabetes using readily available patient data and key variables, such as pregnancies, glucose levels, BMI, and genetic factors. In addition, I will create visual summaries to communicate the insights and patterns identified in the data. The major objectives include:

1.  Collecting and cleaning the diabetes dataset with relevant health variables.

2.  Applying machine learning algorithm (logistic regression) to predict diabetes cases.

3.  Creating visual summaries to show the relationships between key variables.

# Materials and methods

### **The Data**

The dataset used in this project was found in a study by Chou et al., (2023). The outpatient examination data of a Taipei Municipal medical center was taken as the patient population and 15,000 women aged between 20 and 80 were selected as the samples. The women were patients who had gone to the hospital between 2018 and 2020 and between 2021 and 2022 and may or may not have been diagnosed with diabetes.

The dataset contains the following variables:

1\. Pregnancies: Number of times pregnant

2\. PlasmaGlucose: two hours following an oral glucose tolerance test, plasma glucose concentration

3\. DiastolicBloodPressure: Diastolic blood pressure (mm Hg)

4\. TricepsThickness: Triceps skin fold thickness (mm)

5\. SerumInsulin: 2-Hour serum insulin (mu U/ml)

6\. BMI: Body mass index (weight in kg/(height in m)\^2)

7\. DiabetesPedigree: a numerical estimate of an individual's genetic risk for developing diabetes based on family history. A higher score indicates a greater likelihood of developing the condition.

8\. Age: Age (years)

9\. Diabetic Outcome: Class variable (0 or 1) with the class value 1 representing those who tested positive for diabetes.

Dataset can be found here: (<https://drive.google.com/file/d/1eAplOYO-k7ZYHj4uHAY1tEr8VTeaxS6u/view?usp=sharing>).

### Required Steps to Build Model

1.  Load necessary packages

2.  Load and explore the dataset

3.  Data visualization and exploratory analysis

4.  Preprocess data and Train model

5.  Evaluate model

6.  Make prediction

Here's my first code chunk.

```{r}
x=3+4
```

Refer to output in your narrative like this: x=`r x` .

### Load Required Packages

Loading necessary r packages to aid analysis.

```{r, message=F, warning=F}
#install.packages("janitor")
#install.packages("gmodels")
#install.packages("corrplot")
#install.packages("caret")
#install.packages("kableExtra")
library(tidyverse)
library(leaflet)
library(kableExtra)
library(htmlwidgets)
library(widgetframe)
library(dplyr)
library(tidyr)
library(forcats)
library(ggplot2)
library(janitor)
library(gmodels)
library(class)
library(corrplot)
library(caret)
library(reshape2)
library(rmarkdown) 
library(knitr)
knitr::opts_chunk$set(widgetframe_widgets_dir = 'widgets' ) 
knitr::opts_chunk$set(cache=TRUE)  # cache the results for quick compiling
```

### Load and Explore Data

```{r}
diabetes_data <- read.csv("https://drive.google.com/uc?export=download&id=1eAplOYO-k7ZYHj4uHAY1tEr8VTeaxS6u")

```

Exploring the dataset

```{r, results='asis'}
diabetes_data%>%
  slice(1:10) %>% #show only 1:n rows
  kable(digits=2,align="c")%>% #make table and round to two digits
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive")) 


```

```{r}
#Exploring the structure of the data
str(diabetes_data)
```

The dataset contains 15000 patient entries, with all features being numeric values.

##### Clean Dataset

```{r}
duplicated(diabetes_data) #check for duplicates
sum(is.na(diabetes_data)) #to check missing values 

```

The dataset contains no duplicates or missing values. The next step is visual summary.

### Data Visualization and Exploratory Analysis

Correlation and visual summary

```{r}
#remove patientid and outcome for better analysis 
filtered_diabetes <- subset(diabetes_data, select = -c(PatientID,Diabetic))

correlation_matrix <- cor(filtered_diabetes)

# Convert correlation matrix to long format for easier analysis
correlation_melted <- melt(correlation_matrix)

#see the outcome
correlation_melted%>%
  kable(digits=8,align="c")%>% #make table and round to two digits
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive",  full_width = FALSE))  

```

Plot correlation heatmap

```{r fig.width=5, fig.height=4, fig.cap="Correlation HeatMap"}
# Plot heatmap
ggplot(correlation_melted, aes(Var1, Var2, fill=value)) +
  geom_tile(color="white") +
  scale_fill_gradient2(low= "blue", high="red", mid="white", midpoint=0, 
                       limit=c(-1,1), space = "Lab", name="Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title="Correlation Heatmap", x="Features", y="Features")

```

The correlation shows moderately positive correlations between the Age and Pregnancy, and the Insulin and Pregnancy. This indicates that as the age of the patients increased so did the number of pregnancies, also as the number of pregnancies, the quantity of insulin administered to the patients increased likewise.

Weak or no correlations can also be observed in the following attributes of the dataset; DiabetesPedigree and Skin Thickness.

##### Comparing Outcomes and Variables

Age vs Outcome

```{r fig.width=5, fig.height=4, fig.cap="Graph Showing Correlation of Outcome vs Age"}
ggplot(data = diabetes_data, aes(x = Age)) + geom_histogram(color = "blue", fill = "lightblue") + facet_wrap(~Diabetic) + theme_dark() + ylab("Number of Patients") + labs(title = "Age(s) of Patients")
```

0 = Non-diabetic

1= Diabetic

The ages of the patients are skewed to the right with most of the patients being between the ages of 20 to 40.

BMI vs Outcome

```{r fig.width=5, fig.height=4, fig.cap="Plot Showing Correlation Between Outcome vs BMI"}
ggplot(data = diabetes_data, aes(x = BMI)) + geom_histogram(color = "blue", fill = "lightblue") + facet_wrap(~Diabetic) + theme_dark() + ylab("Number of Patients") + labs(title = "BMI of Patients")
```

Blood Pressure vs Outcome

```{r fig.width=5, fig.height=4, fig.cap="Boxplot Showing Correlation Between Outcome vs BloodPressure"}
ggplot(diabetes_data, aes(x = factor(Diabetic), y = DiastolicBloodPressure, fill = factor(Diabetic))) +
  geom_boxplot() +
  labs(title = "Patients' Blood Pressure", x = "Diabetes Status", fill = "Diabetes Status" ) + scale_fill_discrete(labels = c("Non-Diabetic", "Diabetic")) +
  theme_dark()
```

Visualizing the distribution of blood pressure for each outcome.

### Preprocess and Train Data

##### Preprocess

```{r}
# Step 1: Convert the outcome variable to a factor 
diabetes_data2 <- factor(diabetes_data$Diabetic, levels = c(0, 1), labels = c("Non-Diabetic", "Diabetic"))
```

```{r}
# Step 2: Split the data into training and testing sets
set.seed(123)  # for reproducibility
split <- createDataPartition(diabetes_data2, p = 0.7, list = FALSE)
train_data <- diabetes_data[split, ]
test_data <- diabetes_data[-split, ]

# Step 3: Fit the logistic regression model
diabetes_model <- glm(Diabetic ~ Pregnancies + PlasmaGlucose + DiastolicBloodPressure + TricepsThickness + 
                       SerumInsulin + BMI + DiabetesPedigree + Age,
                      data = train_data, family = "binomial")

# Step 4: Summarize the model to see coefficients and other details
summary(diabetes_model)
```

##### Train Model 

```{r}
# Generate predictions on the test set
test_data$predicted_prob <- predict(diabetes_model, newdata = test_data, type = "response")
test_data$predicted_class <- ifelse(test_data$predicted_prob > 0.5, "Diabetic", "Non Diabetic")

# Ensure Outcome is a factor to match predicted class levels
test_data$Outcome <- factor(test_data$Diabetic, levels = c("Diabetic", "Non Diabetic"))

# Create confusion matrix
confusion_matrix <- table(Predicted = test_data$predicted_class, Actual = test_data$Diabetic)
print(confusion_matrix)
```

#### Case Study

Predicting diabetes for a new patient.

```{r}
# Define the new patient's data for prediction
new_patient <- data.frame(
  Pregnancies = 2,
  PlasmaGlucose = 120,
 DiastolicBloodPressure = 70,
  TricepsThickness = 30,
  SerumInsulin = 85,
  BMI = 28.5,
  DiabetesPedigree = 0.627,
  Age = 45
)

# Use the model to predict the probability and the class for the new patient
prediction_prob <- predict(diabetes_model, new_patient, type = "response")
prediction_class <- ifelse(prediction_prob > 0.5, "Diabetic", "Non Diabetic")

# Print the prediction to see results
cat("Predicted probability of diabetes:", prediction_prob, "\n")
cat("Predicted class for the new patient:", prediction_class)


```

The patient is non-diabetic.

ROC Curve

#### Results

\[\~200 words\]

Tables and figures (maps and other graphics) are carefully planned to convey the results of your analysis. Intense exploration and evidence of many trials and failures. The author looked at the data in many different ways before coming to the final presentation of the data.

Show tables, plots, etc. and describe them.

# Conclusions

\[\~200 words\]

Clear summary adequately describing the results and putting them in context. Discussion of further questions and ways to continue investigation.

# References

Chou C-Y, Hsu D-Y, Chou C-H. Predicting the Onset of Diabetes with Machine Learning Methods. *Journal of Personalized Medicine*. 2023; 13(3):406. https://doi.org/10.3390/jpm13030406

Geeks for Geeks Prediction Using R Course: <https://www.geeksforgeeks.org/diabetes-prediction-using-r/>

Pranto B, Mehnaz S, Mahid EB et al. Evaluating machine learning methods for predicting diabetes among female patients in bangladesh. *Information* 2020; 11: 374.

Talukder MdA, Islam MdM, Uddin MA, et al. Toward reliable diabetes prediction: Innovations in data engineering and machine learning applications. DIGITAL HEALTH. 2024;10. doi:10.1177/20552076241271867

Tamunoye Darego (2022) Diabetes Prediction using kNN in R

World Health Organization (2023): <https://www.who.int/news-room/fact-sheets/detail/diabetes>

Xavier Robin, Natacha Turck, Alexandre Hainard, Natalia Tiberti, Frédérique Lisacek, Jean-Charles Sanchez and Markus Müller (2011). “pROC: an open-source package for R and S+ to analyze and compare ROC curves”. *BMC Bioinformatics*, **12**, p. 77. DOI: doi: [10.1186/1471-2105-12-77](https://doi.org/10.1186/1471-2105-12-77)
