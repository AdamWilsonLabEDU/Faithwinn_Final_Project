[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Predicting Diabetes Using Logistic Regression in R",
    "section": "",
    "text": "Introduction\nThe disease “Diabetes Mellitus” is one of the most common critical diseases in the world. According to the World Health Organization (WHO), approximately 422 million people worldwide currently live with diabetes, with the majority residing in low- and middle-income countries (World Health Organization, 2023). The disease is characterized by elevated levels of blood glucose (or blood sugar), which leads over time to serious damage to the heart, blood vessels, eyes, kidneys and nerves.\nFor people at risk of diabetes, healthcare professionals have stressed the value of routine tests, emphasizing the necessity of early detection and intervention (Pranto eta al., 2020). In addition to diabetes care, prevention is essential. Prediction of diabetes from the onset can help healthcare providers take early preventive measures (Talukder et al., 2024).\nThis project aims to build a predictive model for diabetes using readily available patient data and key variables, such as pregnancies, glucose levels, BMI, and genetic factors. In addition, I will create visual summaries to communicate the insights and patterns identified in the data. The major objectives include:\n\nCollecting and cleaning the diabetes dataset with relevant health variables.\nApplying machine learning algorithm (logistic regression) to predict diabetes cases.\nCreating visual summaries to show the relationships between key variables.\n\n\n\nMaterials and methods\n\nThe Data\nThe dataset used in this project was found in a study by Chou et al., (2023). The outpatient examination data of a Taipei Municipal medical center was taken as the patient population and 15,000 women aged between 20 and 80 were selected as the samples. The women were patients who had gone to the hospital between 2018 and 2020 and between 2021 and 2022 and may or may not have been diagnosed with diabetes.\nThe dataset contains the following variables:\n1. Pregnancies: Number of times pregnant\n2. PlasmaGlucose: two hours following an oral glucose tolerance test, plasma glucose concentration\n3. DiastolicBloodPressure: Diastolic blood pressure (mm Hg)\n4. TricepsThickness: Triceps skin fold thickness (mm)\n5. SerumInsulin: 2-Hour serum insulin (mu U/ml)\n6. BMI: Body mass index (weight in kg/(height in m)^2)\n7. DiabetesPedigree: a numerical estimate of an individual’s genetic risk for developing diabetes based on family history. A higher score indicates a greater likelihood of developing the condition.\n8. Age: Age (years)\n9. Diabetic Outcome: Class variable (0 or 1) with the class value 1 representing those who tested positive for diabetes.\nDataset can be found here: (https://drive.google.com/file/d/1eAplOYO-k7ZYHj4uHAY1tEr8VTeaxS6u/view?usp=sharing).\n\n\nRequired Steps to Build Model\n\nLoad necessary packages\nLoad and explore the dataset\nData visualization and exploratory analysis\nPreprocess data and Train model\nEvaluate model\nMake prediction with case study\nROC Curve\n\n\n\nLoad Required Packages\nLoading necessary r packages to aid analysis.\n\ninstall.packages(\"corrplot\")\n\nThe following package(s) will be installed:\n- corrplot [0.95]\nThese packages will be installed into \"~/work/Faithwinn_Final_Project/Faithwinn_Final_Project/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing corrplot ...                       OK [linked from cache]\nSuccessfully installed 1 package in 8 milliseconds.\n\ninstall.packages(\"caret\")\n\nThe following package(s) will be installed:\n- caret [6.0-94]\nThese packages will be installed into \"~/work/Faithwinn_Final_Project/Faithwinn_Final_Project/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing caret ...                          OK [linked from cache]\nSuccessfully installed 1 package in 7 milliseconds.\n\ninstall.packages(\"kableExtra\")\n\nThe following package(s) will be installed:\n- kableExtra [1.4.0]\nThese packages will be installed into \"~/work/Faithwinn_Final_Project/Faithwinn_Final_Project/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing kableExtra ...                     OK [linked from cache]\nSuccessfully installed 1 package in 7 milliseconds.\n\nlibrary(tidyverse)\nlibrary(leaflet)\nlibrary(kableExtra)\nlibrary(htmlwidgets)\nlibrary(widgetframe)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggplot2)\nlibrary(class)\nlibrary(corrplot)\nlibrary(caret)\nlibrary(reshape2) #for melt function\nlibrary(rmarkdown) \nlibrary(knitr)\nknitr::opts_chunk$set(widgetframe_widgets_dir = 'widgets' ) \nknitr::opts_chunk$set(cache=TRUE)  # cache the results for quick compiling\n\n\n\nLoad and Explore Data\n\ndiabetes_data &lt;- read.csv(\"https://drive.google.com/uc?export=download&id=1eAplOYO-k7ZYHj4uHAY1tEr8VTeaxS6u\")\n\nExploring the dataset\ndiabetes_data%&gt;%\n  slice(1:10) %&gt;% #show only 1:n rows\n  kable(digits=2,align=\"c\")%&gt;% #make table and round to two digits\n  kable_styling(bootstrap_options = \n                  c(\"striped\", \"hover\", \"condensed\", \"responsive\")) \n\n\n\n\nPatientID\nPregnancies\nPlasmaGlucose\nDiastolicBloodPressure\nTricepsThickness\nSerumInsulin\nBMI\nDiabetesPedigree\nAge\nDiabetic\n\n\n\n\n1354778\n0\n171\n80\n34\n23\n43.51\n1.21\n21\n0\n\n\n1147438\n8\n92\n93\n47\n36\n21.24\n0.16\n23\n0\n\n\n1640031\n7\n115\n47\n52\n35\n41.51\n0.08\n23\n0\n\n\n1883350\n9\n103\n78\n25\n304\n29.58\n1.28\n43\n1\n\n\n1424119\n1\n85\n59\n27\n35\n42.60\n0.55\n22\n0\n\n\n1619297\n0\n82\n92\n9\n253\n19.72\n0.10\n26\n0\n\n\n1660149\n0\n133\n47\n19\n227\n21.94\n0.17\n21\n0\n\n\n1458769\n0\n67\n87\n43\n36\n18.28\n0.24\n26\n0\n\n\n1201647\n8\n80\n95\n33\n24\n26.62\n0.44\n53\n1\n\n\n1403912\n1\n72\n31\n40\n42\n36.89\n0.10\n26\n0\n\n\n\n\n\n\n\n#Exploring the structure of the data\nstr(diabetes_data)\n\n'data.frame':   15000 obs. of  10 variables:\n $ PatientID             : int  1354778 1147438 1640031 1883350 1424119 1619297 1660149 1458769 1201647 1403912 ...\n $ Pregnancies           : int  0 8 7 9 1 0 0 0 8 1 ...\n $ PlasmaGlucose         : int  171 92 115 103 85 82 133 67 80 72 ...\n $ DiastolicBloodPressure: int  80 93 47 78 59 92 47 87 95 31 ...\n $ TricepsThickness      : int  34 47 52 25 27 9 19 43 33 40 ...\n $ SerumInsulin          : int  23 36 35 304 35 253 227 36 24 42 ...\n $ BMI                   : num  43.5 21.2 41.5 29.6 42.6 ...\n $ DiabetesPedigree      : num  1.213 0.158 0.079 1.283 0.55 ...\n $ Age                   : int  21 23 23 43 22 26 21 26 53 26 ...\n $ Diabetic              : int  0 0 0 1 0 0 0 0 1 0 ...\n\n\nThe dataset contains 15000 patient entries, with all features being numeric values.\n\nClean Dataset\n\nduplicated(diabetes_data) #check for duplicates\nsum(is.na(diabetes_data)) #to check missing values \n\nThe dataset contains no duplicates or missing values. The next step is visual summary.\n\n\n\nData Visualization and Exploratory Analysis\nCorrelation and visual summary\n\n#remove patientid and outcome for better analysis \nfiltered_diabetes &lt;- subset(diabetes_data, select = -c(PatientID,Diabetic))\n\ncorrelation_matrix &lt;- cor(filtered_diabetes)\n\n# Convert correlation matrix from wide to long format for easier analysis\ncorrelation_melted &lt;- melt(correlation_matrix)\n\n#see the outcome\ncorrelation_melted%&gt;%\n  kable(digits=8,align=\"c\")%&gt;% #make table and round to two digits\n  kable_styling(bootstrap_options = \n                  c(\"striped\", \"hover\", \"condensed\", \"responsive\",  fixed_thead = TRUE))%&gt;%\n  scroll_box(width = \"100%\", height = \"400px\") #scroll option long table\n\n\n\n\n\n\nVar1\nVar2\nvalue\n\n\n\n\nPregnancies\nPregnancies\n1.00000000\n\n\nPlasmaGlucose\nPregnancies\n0.05450238\n\n\nDiastolicBloodPressure\nPregnancies\n0.04352845\n\n\nTricepsThickness\nPregnancies\n0.06360454\n\n\nSerumInsulin\nPregnancies\n0.10448699\n\n\nBMI\nPregnancies\n0.08638610\n\n\nDiabetesPedigree\nPregnancies\n0.05424006\n\n\nAge\nPregnancies\n0.13697248\n\n\nPregnancies\nPlasmaGlucose\n0.05450238\n\n\nPlasmaGlucose\nPlasmaGlucose\n1.00000000\n\n\nDiastolicBloodPressure\nPlasmaGlucose\n0.00721196\n\n\nTricepsThickness\nPlasmaGlucose\n0.02709960\n\n\nSerumInsulin\nPlasmaGlucose\n0.03354493\n\n\nBMI\nPlasmaGlucose\n0.02065333\n\n\nDiabetesPedigree\nPlasmaGlucose\n0.00905733\n\n\nAge\nPlasmaGlucose\n0.03886361\n\n\nPregnancies\nDiastolicBloodPressure\n0.04352845\n\n\nPlasmaGlucose\nDiastolicBloodPressure\n0.00721196\n\n\nDiastolicBloodPressure\nDiastolicBloodPressure\n1.00000000\n\n\nTricepsThickness\nDiastolicBloodPressure\n0.01110606\n\n\nSerumInsulin\nDiastolicBloodPressure\n0.02264855\n\n\nBMI\nDiastolicBloodPressure\n0.01587319\n\n\nDiabetesPedigree\nDiastolicBloodPressure\n0.01409873\n\n\nAge\nDiastolicBloodPressure\n0.04133254\n\n\nPregnancies\nTricepsThickness\n0.06360454\n\n\nPlasmaGlucose\nTricepsThickness\n0.02709960\n\n\nDiastolicBloodPressure\nTricepsThickness\n0.01110606\n\n\nTricepsThickness\nTricepsThickness\n1.00000000\n\n\nSerumInsulin\nTricepsThickness\n0.02968762\n\n\nBMI\nTricepsThickness\n0.02474548\n\n\nDiabetesPedigree\nTricepsThickness\n-0.00095109\n\n\nAge\nTricepsThickness\n0.06138287\n\n\nPregnancies\nSerumInsulin\n0.10448699\n\n\nPlasmaGlucose\nSerumInsulin\n0.03354493\n\n\nDiastolicBloodPressure\nSerumInsulin\n0.02264855\n\n\nTricepsThickness\nSerumInsulin\n0.02968762\n\n\nSerumInsulin\nSerumInsulin\n1.00000000\n\n\nBMI\nSerumInsulin\n0.05122315\n\n\nDiabetesPedigree\nSerumInsulin\n0.04632376\n\n\nAge\nSerumInsulin\n0.08800683\n\n\nPregnancies\nBMI\n0.08638610\n\n\nPlasmaGlucose\nBMI\n0.02065333\n\n\nDiastolicBloodPressure\nBMI\n0.01587319\n\n\nTricepsThickness\nBMI\n0.02474548\n\n\nSerumInsulin\nBMI\n0.05122315\n\n\nBMI\nBMI\n1.00000000\n\n\nDiabetesPedigree\nBMI\n0.02886835\n\n\nAge\nBMI\n0.06290975\n\n\nPregnancies\nDiabetesPedigree\n0.05424006\n\n\nPlasmaGlucose\nDiabetesPedigree\n0.00905733\n\n\nDiastolicBloodPressure\nDiabetesPedigree\n0.01409873\n\n\nTricepsThickness\nDiabetesPedigree\n-0.00095109\n\n\nSerumInsulin\nDiabetesPedigree\n0.04632376\n\n\nBMI\nDiabetesPedigree\n0.02886835\n\n\nDiabetesPedigree\nDiabetesPedigree\n1.00000000\n\n\nAge\nDiabetesPedigree\n0.05563319\n\n\nPregnancies\nAge\n0.13697248\n\n\nPlasmaGlucose\nAge\n0.03886361\n\n\nDiastolicBloodPressure\nAge\n0.04133254\n\n\nTricepsThickness\nAge\n0.06138287\n\n\nSerumInsulin\nAge\n0.08800683\n\n\nBMI\nAge\n0.06290975\n\n\nDiabetesPedigree\nAge\n0.05563319\n\n\nAge\nAge\n1.00000000\n\n\n\n\n\n\n\n\nPlot correlation heatmap\n\n# Plot heatmap\nggplot(correlation_melted, aes(Var1, Var2, fill=value)) +\n  geom_tile(color=\"white\") +\n  scale_fill_gradient2(low= \"blue\", high=\"red\", mid=\"white\", midpoint=0, \n                       limit=c(-1,1), space = \"Lab\", name=\"Correlation\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + #so the xlabs are not scrunched together\n  labs(title=\"Correlation Heatmap\", x=\"Features\", y=\"Features\")\n\n\n\n\nCorrelation HeatMap\n\n\n\n\nThe correlation shows moderately positive correlations between the Age and Pregnancy, and the Insulin and Pregnancy. This indicates that as the age of the patients increased so did the number of pregnancies, also as the number of pregnancies, the quantity of insulin administered to the patients increased likewise.\nWeak or no correlations can also be observed in the following attributes of the dataset; DiabetesPedigree and Skin Thickness.\n\nComparing Outcomes and Variables\nAge vs Outcome\n\nggplot(data = diabetes_data, aes(x = Age)) + geom_histogram(color = \"blue\", fill = \"lightblue\") + facet_wrap(~Diabetic) + theme_dark() + ylab(\"Number of Patients\") + labs(title = \"Age(s) of Patients\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nGraph Showing Correlation of Outcome vs Age\n\n\n\n\n0 = Non-diabetic\n1= Diabetic\nThe ages of the patients are skewed to the right with most of the patients being between the ages of 20 to 40.\nBMI vs Outcome\n\nggplot(data = diabetes_data, aes(x = BMI)) + geom_histogram(color = \"blue\", fill = \"lightblue\") + facet_wrap(~Diabetic) + theme_dark() + ylab(\"Number of Patients\") + labs(title = \"BMI of Patients\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nPlot Showing Correlation Between Outcome vs BMI\n\n\n\n\nBlood Pressure vs Outcome\n\nggplot(diabetes_data, aes(x = factor(Diabetic), y = DiastolicBloodPressure, fill = factor(Diabetic))) +\n  geom_boxplot() +\n  labs(title = \"Patients' Blood Pressure\", x = \"Diabetes Status\", fill = \"Diabetes Status\" ) + scale_fill_discrete(labels = c(\"Non-Diabetic\", \"Diabetic\")) +\n  theme_dark()\n\n\n\n\nBoxplot Showing Correlation Between Outcome vs BloodPressure\n\n\n\n\nVisualizing the distribution of blood pressure for each outcome.\n\n\n\nPreprocess and Train Data\n\nPreprocess\n\n# Step 1: Convert the outcome variable to a factor \ndiabetes_data$Diabetic &lt;- factor(diabetes_data$Diabetic, \n                                levels = c(0, 1), \n                                labels = c(\"Non-Diabetic\", \"Diabetic\"))\n\n\n# Step 2: Split the data into training and testing sets\nset.seed(123)  # for reproducibility\nsplit &lt;- createDataPartition(diabetes_data$Diabetic, p = 0.7, list = FALSE)\ntrain_data &lt;- diabetes_data[split, ]\ntest_data &lt;- diabetes_data[-split, ]\n\n# Step 3: Fit the logistic regression model\ndiabetes_model &lt;- glm(Diabetic ~ Pregnancies + PlasmaGlucose + DiastolicBloodPressure + TricepsThickness + \n                       SerumInsulin + BMI + DiabetesPedigree + Age,\n                      data = train_data, family = binomial)\n\n# Step 4: Summarize the model to see coefficients and other details\nsummary(diabetes_model)\n\n\nCall:\nglm(formula = Diabetic ~ Pregnancies + PlasmaGlucose + DiastolicBloodPressure + \n    TricepsThickness + SerumInsulin + BMI + DiabetesPedigree + \n    Age, family = binomial, data = train_data)\n\nCoefficients:\n                         Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)            -8.7112122  0.2194791 -39.690  &lt; 2e-16 ***\nPregnancies             0.2698705  0.0080060  33.709  &lt; 2e-16 ***\nPlasmaGlucose           0.0096941  0.0008234  11.773  &lt; 2e-16 ***\nDiastolicBloodPressure  0.0121392  0.0015853   7.657  1.9e-14 ***\nTricepsThickness        0.0226795  0.0018192  12.467  &lt; 2e-16 ***\nSerumInsulin            0.0039586  0.0001944  20.367  &lt; 2e-16 ***\nBMI                     0.0486785  0.0027794  17.514  &lt; 2e-16 ***\nDiabetesPedigree        1.0392443  0.0670211  15.506  &lt; 2e-16 ***\nAge                     0.0590712  0.0020860  28.318  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 13366.8  on 10499  degrees of freedom\nResidual deviance:  9151.1  on 10491  degrees of freedom\nAIC: 9169.1\n\nNumber of Fisher Scoring iterations: 5\n\n\n\n\nTrain Model\n\n# Generate predictions on the test set\ntest_data$predicted_prob &lt;- predict(diabetes_model, newdata = test_data, type = \"response\")\ntest_data$predicted_class &lt;- factor(ifelse(test_data$predicted_prob &gt; 0.5, \n                                         \"Diabetic\", \"Non-Diabetic\"),\n                                  levels = c(\"Non-Diabetic\", \"Diabetic\"))\n\n\n# Create confusion matrix\nconfusion_matrix &lt;- confusionMatrix(data = test_data$predicted_class,\n                                  reference = test_data$Diabetic,\n                                  positive = \"Diabetic\")\n\n\n# Print confusion matrix and statistics\nprint(confusion_matrix)\n\nConfusion Matrix and Statistics\n\n              Reference\nPrediction     Non-Diabetic Diabetic\n  Non-Diabetic         2671      627\n  Diabetic              329      873\n                                          \n               Accuracy : 0.7876          \n                 95% CI : (0.7753, 0.7994)\n    No Information Rate : 0.6667          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.497           \n                                          \n Mcnemar's Test P-Value : &lt; 2.2e-16       \n                                          \n            Sensitivity : 0.5820          \n            Specificity : 0.8903          \n         Pos Pred Value : 0.7263          \n         Neg Pred Value : 0.8099          \n             Prevalence : 0.3333          \n         Detection Rate : 0.1940          \n   Detection Prevalence : 0.2671          \n      Balanced Accuracy : 0.7362          \n                                          \n       'Positive' Class : Diabetic        \n                                          \n\n\n\n\nCase Study\nPredicting diabetes for a new patient named Molly_Jane.\n\n# Define the new patient's data for prediction\nMolly_Jane &lt;- data.frame(\n  Pregnancies = 2,\n  PlasmaGlucose = 120,\n DiastolicBloodPressure = 70,\n  TricepsThickness = 30,\n  SerumInsulin = 85,\n  BMI = 28.5,\n  DiabetesPedigree = 0.627,\n  Age = 45\n)\n\n# Use the model to predict the probability for the new patient\nprediction_prob &lt;- predict(diabetes_model, newdata = Molly_Jane, type = \"response\")\n\n# Convert probability to class prediction with explicit labeling\nprediction_class &lt;- ifelse(prediction_prob &gt; 0.5, \"Diabetic\", \"Non-Diabetic\")\n\n# Print the results with formatted probability and text label\ncat(\"Predicted probability of diabetes:\", round(prediction_prob, 3), \"\\n\")#rounded to 3 decimal points\n\nPredicted probability of diabetes: 0.391 \n\ncat(\"Predicted class for the new patient:\", prediction_class)\n\nPredicted class for the new patient: Non-Diabetic\n\n\nWith a probability of 39.1 %, Molly_Jane is classified as Non-Diabetic.\n\n\nROC Curve\n\n\n\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\n\n\nAttaching package: 'pROC'\n\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nroc_curve &lt;- roc(test_data$Diabetic, test_data$predicted_prob, levels = c(\"Non-Diabetic\", \"Diabetic\"))\n\nSetting direction: controls &lt; cases\n\nplot(roc_curve, col = \"blue\", main = \"ROC Curve for Diabetes Prediction\")\n\n\n\n\nModel’s ROC Curve\n\n\n\n\nThe Receiver’s Operating Characteristic (ROC) shows the overall performance of the model is good. With an AUC (Area Under the Curve) of about 0.8 or higher, the model will be about 80% of the time accurate in predicting if a patient is diabetic or non-diabetic.\n\n\n\nConclusions\n[~200 words]\nClear summary adequately describing the results and putting them in context. Discussion of further questions and ways to continue investigation.\n\n\n\nReferences\nChou C-Y, Hsu D-Y, Chou C-H. Predicting the Onset of Diabetes with Machine Learning Methods. Journal of Personalized Medicine. 2023; 13(3):406. https://doi.org/10.3390/jpm13030406\nGeeks for Geeks Prediction Using R Course: https://www.geeksforgeeks.org/diabetes-prediction-using-r/\nPranto B, Mehnaz S, Mahid EB et al. Evaluating machine learning methods for predicting diabetes among female patients in bangladesh. Information 2020; 11: 374.\nTalukder MdA, Islam MdM, Uddin MA, et al. Toward reliable diabetes prediction: Innovations in data engineering and machine learning applications. DIGITAL HEALTH. 2024;10. doi:10.1177/20552076241271867\nTamunoye Darego (2022) Diabetes Prediction using kNN in R\nWorld Health Organization (2023): https://www.who.int/news-room/fact-sheets/detail/diabetes\nXavier Robin, Natacha Turck, Alexandre Hainard, Natalia Tiberti, Frédérique Lisacek, Jean-Charles Sanchez and Markus Müller (2011). “pROC: an open-source package for R and S+ to analyze and compare ROC curves”. BMC Bioinformatics, 12, p. 77. DOI: doi: 10.1186/1471-2105-12-77"
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "Faithwin's GEO511 FinalProject",
    "section": "",
    "text": "This is the data path to the dataset used in this project.\nread.csv(“https://drive.google.com/uc?export=download&id=1eAplOYO-k7ZYHj4uHAY1tEr8VTeaxS6u”)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]